from aiogram import Bot,types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InlineKeyboardButton,InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton,InputFile

tg_bot_token = "6522757967:AAH0pF4mkSTJ4HtRg1PUFGBEgffieVOgzGk"

bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):

    main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    catalog = KeyboardButton("–∫–∞—Ç–∞–ª–æ–≥ üõí")
    about = KeyboardButton("–æ –Ω–∞—Å üîç")
    contacts = KeyboardButton("–∫–æ–Ω—Ç–∞–∫—Ç—ã üìû")
    main_menu.add(catalog, about, contacts)

    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!                                                                                                                               "
                         " –≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º.                                                                                    "
                         " –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —É–ø—Ä–æ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏.                                                                                    "
                         " –ß—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º, –Ω–∞–º –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.                                                                                    "
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–∏—Ö, –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: '–∫–∞—Ç–∞–ª–æ–≥'.                                                                                    "

                         ,reply_markup= main_menu)


@dp.message_handler(lambda message: message.text == "–∫–∞—Ç–∞–ª–æ–≥ üõí")
async def catalog(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=1)
    razmer_1 = InlineKeyboardButton(text="2.4 x 2.4", callback_data="razmer_1")
    razmer_2 = InlineKeyboardButton(text="3.0 x 2.4", callback_data="razmer_2")
    razmer_3 = InlineKeyboardButton(text="4.0 x 2.4", callback_data="razmer_3")
    razmer_4 = InlineKeyboardButton(text="6.0 x 2.4", callback_data="razmer_4")
    razmer_5 = InlineKeyboardButton(text="6.0 x 4.8(–º–æ–¥—É–ª—å–Ω–∞—è)", callback_data="razmer_5")
    razmer_6 = InlineKeyboardButton(text="8.0 x 2.4", callback_data="razmer_6")
    razmer_7 = InlineKeyboardButton(text="9.0 x 2.4", callback_data="razmer_7")
    razmer_8 = InlineKeyboardButton(text="12.0 x 2.4", callback_data="razmer_8")

    keyboard.add(razmer_1, razmer_2, razmer_3, razmer_4, razmer_5, razmer_6, razmer_7, razmer_8)
    await message.answer("–ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –≤—ã–±–∏—Ä–∏—Ç–µ –≥–∞–±–∞—Ä–∏—Ç—ã –±—ã—Ç–æ–≤–∫–∏üìê", reply_markup=keyboard)
#######################################################################
@dp.callback_query_handler(lambda c: c.data == 'razmer_1')
async def okno_1(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    okno_1_1 = InlineKeyboardButton(text="—è —Ö–æ—á—É –æ–¥–Ω–æ –æ–∫–Ω–æ", callback_data="okno_1_1")
    okno_3_1 = InlineKeyboardButton(text="—è —Ö–æ—á—É 3 –æ–∫–Ω–∞ (–ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã)", callback_data="okno_3_1")
    ikb.add(okno_1_1,okno_3_1 )
    await bot.send_message(message.from_user.id, "—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 2.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤,—Å–∫–æ–ª—å–∫–æ –æ–∫–æ–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤ —Å–æ–≤–æ–µ–π –±—ã—Ç–æ–≤–∫–µ?",reply_markup= ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_2')
async def okno_2(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    okno_1_2 = InlineKeyboardButton(text="—è —Ö–æ—á—É –æ–¥–Ω–æ –æ–∫–Ω–æ", callback_data="okno_1_2")
    okno_3_2 = InlineKeyboardButton(text="—è —Ö–æ—á—É 3 –æ–∫–Ω–∞", callback_data="okno_3_2")
    ikb.add(okno_1_2, okno_3_2)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 3.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤,—Å–∫–æ–ª—å–∫–æ –æ–∫–æ–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤ —Å–æ–≤–æ–µ–π –±—ã—Ç–æ–≤–∫–µ?",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_3')
async def okno_3(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    okno_1_3 = InlineKeyboardButton(text="—è —Ö–æ—á—É –æ–¥–Ω–æ –æ–∫–Ω–æ", callback_data="okno_1_3")
    okno_3_3 = InlineKeyboardButton(text="—è —Ö–æ—á—É 3 –æ–∫–Ω–∞", callback_data="okno_3_3")
    ikb.add(okno_3_3, okno_1_3)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 4.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤,—Å–∫–æ–ª—å–∫–æ –æ–∫–æ–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤ —Å–æ–≤–æ–µ–π –±—ã—Ç–æ–≤–∫–µ?",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_4')
async def tambur_4(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    tambur_net_4 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —Ç–∞–º–±—É—Ä–∞", callback_data="tambur_net_4")
    tambur_da_4 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —Ç–∞–º–±—É—Ä–æ–º", callback_data="tambur_da_4")
    ikb.add(tambur_net_4, tambur_da_4)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 6.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –≤ –±—ã—Ç–æ–≤–∫–µ –±—ã–ª —Ç–∞–º–±—É—Ä?",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_5')
async def tambur_5(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    tambur_net_5 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —Ç–∞–º–±—É—Ä–∞", callback_data="tambur_net_5")
    tambur_da_5 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —Ç–∞–º–±—É—Ä–æ–º", callback_data="tambur_da_5")
    ikb.add(tambur_net_5, tambur_da_5)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 6.0 x 4.8 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –≤ –±—ã—Ç–æ–≤–∫–µ –±—ã–ª —Ç–∞–º–±—É—Ä?",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_6')
async def tambur_6(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    tambur_net_6 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —Ç–∞–º–±—É—Ä–∞", callback_data="tambur_net_6")
    tambur_da_6 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —Ç–∞–º–±—É—Ä–æ–º", callback_data="tambur_da_6")
    ikb.add(tambur_net_6, tambur_da_6)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 8.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –≤ –±—ã—Ç–æ–≤–∫–µ –±—ã–ª —Ç–∞–º–±—É—Ä?",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_7')
async def tambur_7(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    tambur_net_7 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —Ç–∞–º–±—É—Ä–∞", callback_data="tambur_net_7")
    tambur_da_7 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —Ç–∞–º–±—É—Ä–æ–º", callback_data="tambur_da_7")
    ikb.add(tambur_net_7, tambur_da_7)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 9.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –≤ –±—ã—Ç–æ–≤–∫–µ –±—ã–ª —Ç–∞–º–±—É—Ä?.",reply_markup=ikb)

@dp.callback_query_handler(lambda c: c.data == 'razmer_8')
async def tambur_8(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=1)
    tambur_net_8 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —Ç–∞–º–±—É—Ä–∞", callback_data="tambur_net_8")
    tambur_da_8 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —Ç–∞–º–±—É—Ä–æ–º", callback_data="tambur_da_8")
    ikb.add(tambur_net_8, tambur_da_8)
    await bot.send_message(message.from_user.id,"—Ö–æ—Ä–æ—à–æ –≤—ã –≤—ã–±—Ä—ã–ª–∏ –ø–ª–æ—â–∞–¥—å: 12.0 x 2.4 –ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –≤ –±—ã—Ç–æ–≤–∫–µ –±—ã–ª —Ç–∞–º–±—É—Ä?.",reply_markup=ikb)









@dp.callback_query_handler(lambda c: c.data == 'okno_1_1')
async def electro_1(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_1 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_1")
    electro_da_1 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_1")
    pepsiKeyboard.add(electro_net_1, electro_da_1)
    await bot.send_message(message.from_user.id," –≤—ã –≤—ã–±—Ä–∞–ª–∏ 1 –æ–∫–Ω–æ. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –æ–∫–Ω–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'okno_3_1')
async def electro_2(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_2 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_2")
    electro_da_2 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_2")
    pepsiKeyboard.add(electro_net_2, electro_da_2)
    await bot.send_message(message.from_user.id,"–≤—ã –≤—ã–±—Ä–∞–ª–∏ 3 –æ–∫–Ω–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –æ–∫–Ω–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'okno_1_2')
async def electro_3(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_3 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_3")
    electro_da_3 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_3")
    pepsiKeyboard.add(electro_net_3, electro_da_3)
    await bot.send_message(message.from_user.id," –≤—ã –≤—ã–±—Ä–∞–ª–∏ 1 –æ–∫–Ω–æ. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'okno_3_2')
async def electro_4(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_4 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_4")
    electro_da_4 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_4")
    pepsiKeyboard.add(electro_net_4, electro_da_4)
    await bot.send_message(message.from_user.id,"–≤—ã –≤—ã–±—Ä–∞–ª–∏ 3 –æ–∫–Ω–∞ –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'okno_1_3')
async def electro_5(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_5 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_5")
    electro_da_5 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_5")
    pepsiKeyboard.add(electro_net_5, electro_da_5)
    await bot.send_message(message.from_user.id," –≤—ã –≤—ã–±—Ä–∞–ª–∏ 1 –æ–∫–Ω–æ. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'okno_3_3')
async def electro_6(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_6 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_6")
    electro_da_6 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_6")
    pepsiKeyboard.add(electro_net_6, electro_da_6)
    await bot.send_message(message.from_user.id,"–≤—ã –≤—ã–±—Ä–∞–ª–∏ 3 –æ–∫–Ω–∞ –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'tambur_net_4')
async def electro_7(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_7 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_7")
    electro_da_7 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_7")
    pepsiKeyboard.add(electro_net_7, electro_da_7)
    await bot.send_message(message.from_user.id,"–õ–∞–¥–Ω–æ, –æ–±–æ–π–¥–µ–º—Å—è –±–µ–∑ —Ç–∞–º–±—É—Ä–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'tambur_da_4')
async def electro_8(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_8 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_8")
    electro_da_8 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_8")
    pepsiKeyboard.add(electro_net_8, electro_da_8)
    await bot.send_message(message.from_user.id," –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'tambur_net_5')
async def electro_9(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_9 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_9")
    electro_da_9 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_9")
    pepsiKeyboard.add(electro_net_9, electro_da_9)
    await bot.send_message(message.from_user.id,"–õ–∞–¥–Ω–æ, –æ–±–æ–π–¥–µ–º—Å—è –±–µ–∑ —Ç–∞–º–±—É—Ä–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'tambur_da_5')
async def electro_10(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_10 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_10")
    electro_da_10 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_10")
    pepsiKeyboard.add(electro_net_10, electro_da_10)
    await bot.send_message(message.from_user.id," –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'tambur_net_6')
async def electro_11(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_11 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_11")
    electro_da_11 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_11")
    pepsiKeyboard.add(electro_net_11, electro_da_11)
    await bot.send_message(message.from_user.id,"–õ–∞–¥–Ω–æ, –æ–±–æ–π–¥–µ–º—Å—è –±–µ–∑ —Ç–∞–º–±—É—Ä–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'tambur_da_6')
async def electro_12(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_12 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_12")
    electro_da_12 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_12")
    pepsiKeyboard.add(electro_net_12, electro_da_12)
    await bot.send_message(message.from_user.id," –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'tambur_net_7')
async def electro_13(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_13 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_13")
    electro_da_13 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_13")
    pepsiKeyboard.add(electro_net_13, electro_da_13)
    await bot.send_message(message.from_user.id,"–õ–∞–¥–Ω–æ, –æ–±–æ–π–¥–µ–º—Å—è –±–µ–∑ —Ç–∞–º–±—É—Ä–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'tambur_da_7')
async def electro_14(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_14 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_14")
    electro_da_14 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_14")
    pepsiKeyboard.add(electro_net_14, electro_da_14)
    await bot.send_message(message.from_user.id," –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)




@dp.callback_query_handler(lambda c: c.data == 'tambur_net_8')
async def electro_15(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_15 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_15")
    electro_da_15 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_15")
    pepsiKeyboard.add(electro_net_15, electro_da_15)
    await bot.send_message(message.from_user.id," –õ–∞–¥–Ω–æ, –æ–±–æ–π–¥–µ–º—Å—è –±–µ–∑ —Ç–∞–º–±—É—Ä–∞. –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)

@dp.callback_query_handler(lambda c: c.data == 'tambur_da_8')
async def electro_16(message: types.Message):
    pepsiKeyboard = InlineKeyboardMarkup(row_width=1)
    electro_net_16 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ –±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", callback_data="electro_net_16")
    electro_da_16 = InlineKeyboardButton(text="–±—ã—Ç–æ–≤–∫–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π", callback_data="electro_da_16")
    pepsiKeyboard.add(electro_net_16, electro_da_16)
    await bot.send_message(message.from_user.id," –≤—ã –≤—ã–±—Ä–∞–ª–∏ —Å —Ç–∞–º–±—É—Ä–æ–º, –í–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –æ–±–æ—Ä—É–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –±—ã—Ç–æ–≤–∫—É —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π?",reply_markup=pepsiKeyboard)



#########################################################
#1—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 1 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_1')
async def otdelka_1(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_1org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_1org")
    colaKeyboard.add(otdelka_1org)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 1 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_1')
async def otdelka_2(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_2org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_2org")
    colaKeyboard.add(otdelka_2org)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)




# –° –¢–ê–ú–ë–£–†–û–ú  1 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_2')
async def otdelka_3(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_3org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_3org")

    colaKeyboard.add(otdelka_3org)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  1 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_2')
async def otdelka_4(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_4org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_4org")
    colaKeyboard.add(otdelka_4org)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)


#########################################################
#2—Ä–∞–∑–º–µ—Ä
########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 2 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_3')
async def otdelka_5(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_5org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_5org")
    otdelka_5pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_5pvh")
    otdelka_5tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_5tree")
    colaKeyboard.add(otdelka_5org,otdelka_5pvh, otdelka_5tree)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 2 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_3')
async def otdelka_6(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_6org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_6org")
    otdelka_6pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_6pvh")
    otdelka_6tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_6tree")
    colaKeyboard.add(otdelka_6org, otdelka_6pvh, otdelka_6tree)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  2 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_4')
async def otdelka_7(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_7org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_7org")
    otdelka_7pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_7pvh")
    otdelka_7tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_7tree")
    colaKeyboard.add(otdelka_7org, otdelka_7pvh, otdelka_7tree)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  2 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_4')
async def otdelka_8(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_8org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_8org")
    otdelka_8pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_8pvh")
    otdelka_8tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_8tree")
    colaKeyboard.add(otdelka_8org, otdelka_8pvh, otdelka_8tree)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

#########################################################
#3—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 3 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_5')
async def otdelka_9(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_9org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_9org")
    otdelka_9pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_9pvh")
    otdelka_9tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_9tree")
    otdelka_9mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_9mdf")
    colaKeyboard.add(otdelka_9org, otdelka_9pvh, otdelka_9tree, otdelka_9mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 3 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_5')
async def otdelka_10(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_10org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_10org")
    otdelka_10pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_10pvh")
    otdelka_10tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_10tree")
    otdelka_10mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_10mdf")
    colaKeyboard.add(otdelka_10org, otdelka_10pvh, otdelka_10tree, otdelka_10mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  3 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_6')
async def otdelka_11(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_11org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_11org")
    otdelka_11pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_11pvh")
    otdelka_11tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_11tree")
    otdelka_11mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_11mdf")
    colaKeyboard.add(otdelka_11org, otdelka_11pvh, otdelka_11tree, otdelka_11mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  3 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_6')
async def otdelka_12(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_12org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_12org")
    otdelka_12pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_12pvh")
    otdelka_12tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_12tree")
    otdelka_12mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_12mdf")
    colaKeyboard.add(otdelka_12org, otdelka_12pvh, otdelka_12tree, otdelka_12mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)


#########################################################
#4—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 4 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_7')
async def otdelka_13(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_13org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_13org")
    otdelka_13pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_13pvh")
    otdelka_13tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_13tree")
    otdelka_13mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_13mdf")
    colaKeyboard.add(otdelka_13org, otdelka_13pvh, otdelka_13tree, otdelka_13mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 4 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_7')
async def otdelka_14(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_14org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_14org")
    otdelka_14pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_14pvh")
    otdelka_14tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_14tree")
    otdelka_14mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_14mdf")
    colaKeyboard.add(otdelka_14org, otdelka_14pvh, otdelka_14tree, otdelka_14mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  4 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_8')
async def otdelka_15(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_15org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_15org")
    otdelka_15pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_15pvh")
    otdelka_15tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_15tree")
    otdelka_15mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_15mdf")
    colaKeyboard.add(otdelka_15org, otdelka_15pvh, otdelka_15tree, otdelka_15mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  4 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_8')
async def otdelka_16(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_16org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_16org")
    otdelka_16pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_16pvh")
    otdelka_16tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_16tree")
    otdelka_16mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_16mdf")
    colaKeyboard.add(otdelka_16org, otdelka_16pvh, otdelka_16tree, otdelka_16mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)



#########################################################
#5—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_9')
async def otdelka_17(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_17org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_17org")
    otdelka_17pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_17pvh")
    otdelka_17tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_17tree")
    otdelka_17mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_17mdf")
    colaKeyboard.add(otdelka_17org, otdelka_17pvh, otdelka_17tree, otdelka_17mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_9')
async def otdelka_18(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_18org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_18org")
    otdelka_18pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_18pvh")
    otdelka_18tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_18tree")
    otdelka_18mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_18mdf")
    colaKeyboard.add(otdelka_18org, otdelka_18pvh, otdelka_18tree, otdelka_18mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  5 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_10')
async def otdelka_19(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_19org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_19org")
    otdelka_19pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_19pvh")
    otdelka_19tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_19tree")
    otdelka_19mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_19mdf")
    colaKeyboard.add(otdelka_19org, otdelka_19pvh, otdelka_19tree, otdelka_19mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  5 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_10')
async def otdelka_20(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_20org = InlineKeyboardButton(text="–æ—Ä–≥–∞–ª–∏—Ç", callback_data="otdelka_20org")
    otdelka_20pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_20pvh")
    otdelka_20tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_20tree")
    otdelka_20mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_20mdf")
    colaKeyboard.add(otdelka_20org, otdelka_20pvh, otdelka_20tree, otdelka_20mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)


#########################################################
#6—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_11')
async def otdelka_21(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_21pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_21pvh")
    otdelka_21tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_21tree")
    otdelka_21mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_21mdf")
    colaKeyboard.add(otdelka_21pvh, otdelka_21tree, otdelka_21mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_11')
async def otdelka_22(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_22pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_22pvh")
    otdelka_22tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_22tree")
    otdelka_22mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_22mdf")
    colaKeyboard.add(otdelka_22pvh, otdelka_22tree, otdelka_22mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  6 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_12')
async def otdelka_23(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_23pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_23pvh")
    otdelka_23tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_23tree")
    otdelka_23mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_23mdf")
    colaKeyboard.add(otdelka_23pvh, otdelka_23tree, otdelka_23mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  6 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_12')
async def otdelka_24(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_24pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_24pvh")
    otdelka_24tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_24tree")
    otdelka_24mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_24mdf")
    colaKeyboard.add(otdelka_24pvh, otdelka_24tree, otdelka_24mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)




#########################################################
#7—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_13')
async def otdelka_25(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_25pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_25pvh")
    otdelka_25tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_25tree")
    otdelka_25mdf = InlineKeyboardButton(text="–º–¥—Ñ", callback_data="otdelka_25mdf")
    colaKeyboard.add(otdelka_25pvh, otdelka_25tree,otdelka_25mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_13')
async def otdelka_26(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_26pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_26pvh")
    otdelka_26tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_26tree")
    otdelka_26mdf = InlineKeyboardButton(text="–º–¥—Ñ", callback_data="otdelka_26mdf")
    colaKeyboard.add(otdelka_26pvh, otdelka_26tree,otdelka_26mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)






# –° –¢–ê–ú–ë–£–†–û–ú  7 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_14')
async def otdelka_27(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_27pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_23pvh")
    otdelka_27tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_23tree")
    otdelka_27mdf = InlineKeyboardButton(text="–º–¥—Ñ", callback_data="otdelka_23mdf")
    colaKeyboard.add(otdelka_27pvh, otdelka_27tree,otdelka_27mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  7 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_14')
async def otdelka_28(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_28pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_28pvh")
    otdelka_28tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_28tree")
    otdelka_28mdf = InlineKeyboardButton(text="–º–¥—Ñ", callback_data="otdelka_28mdf")
    colaKeyboard.add( otdelka_28pvh, otdelka_28tree,otdelka_28mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)



#########################################################
#8—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_net_15')
async def otdelka_29(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_29pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_29pvh")
    otdelka_29tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_29tree")
    otdelka_29mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_29mdf")
    colaKeyboard.add(otdelka_29pvh, otdelka_29tree, otdelka_29mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_15')
async def otdelka_30(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_30pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_30pvh")
    otdelka_30tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_30tree")
    otdelka_30mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_30mdf")
    colaKeyboard.add(otdelka_30pvh, otdelka_30tree, otdelka_30mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  8 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'electro_net_16')
async def otdelka_31(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_31pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_31pvh")
    otdelka_31tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_31tree")
    otdelka_31mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_31mdf")
    colaKeyboard.add(otdelka_31pvh, otdelka_31tree, otdelka_31mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

# –° –¢–ê–ú–ë–£–†–û–ú  8 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'electro_da_16')
async def otdelka_32(message: types.Message):
    colaKeyboard = InlineKeyboardMarkup(row_width=1)
    otdelka_32pvh = InlineKeyboardButton(text="–ü–í–•", callback_data="otdelka_32pvh")
    otdelka_32tree = InlineKeyboardButton(text="–¥–µ—Ä–µ–≤–æ", callback_data="otdelka_32tree")
    otdelka_32mdf = InlineKeyboardButton(text="–ú–î–§", callback_data="otdelka_32mdf")
    colaKeyboard.add(otdelka_32pvh, otdelka_32tree, otdelka_32mdf)
    await bot.send_message(message.from_user.id,"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–æ–¥–∫–∏, –∏ —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫—É—é –æ—Ç–¥–µ–ª–∫—É –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?",reply_markup=colaKeyboard)

#########################################  –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–∫ —Ñ–æ—Ç–∫–∏)) ###################################################################


#########################################  —Ä–∞–∑–º–µ—Ä 1)) ###################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 1 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_1org')
async def finish_1(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_1/bytovka_024_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 2,4 —Ö 2,4 –º- –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ–≥—Ä–∞–ª–∏—Ç,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 83 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


##################################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 1 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_2org')
async def finish_2(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_1/bytovka_024_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 2.4 —Ö 2,4 –º- –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞  –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 92 500 —Ä—É–± . —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################
# –° –¢–ê–ú–ë–£–†–û–ú  1 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_3org')
async def finish_3(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_1/bytovka_024_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 2.4 —Ö 2,4 –º- –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã\n'
                                  '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '3 –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 92 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

# –° –¢–ê–ú–ë–£–†–û–ú  1 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û
##################################################################################
@dp.callback_query_handler(lambda c: c.data == 'otdelka_4org')
async def finish_4(message: types.Message):
   await bot.send_photo(message.from_user.id, InputFile('photos/razmer_1/bytovka_024_cam001.jpg'),
                        caption='–†–∞–∑–º–µ—Ä: 2.4 —Ö 2,4 –º- –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '3 –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 101 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


#########################################  —Ä–∞–∑–º–µ—Ä 2)) ###################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 2 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_5org')
async def finish_5(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 99 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_5pvh')
async def finish_6(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 121 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_5tree')
async def finish_7(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 135 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 2 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_6org')
async def finish_8(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 109 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_6pvh')
async def finish_9(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 130 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_6tree')
async def finish_10(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 144 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################
# –° –¢–ê–ú–ë–£–†–û–ú  2 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_7org')
async def finish_11(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 99 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_7pvh')
async def finish_12(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '1 –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 121 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_7tree')
async def finish_13(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 135 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
# –° –¢–ê–ú–ë–£–†–û–ú  2 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û
##################################################################################

@dp.callback_query_handler(lambda c: c.data == 'otdelka_8org')
async def finish_14(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 118 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_8pvh')
async def finish_15(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 140 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_8tree')
async def finish_16(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_2/bytovka_032_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 3,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 154 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
#3—Ä–∞–∑–º–µ—Ä
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 3 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_9org')
async def finish_17(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'                                 
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 117 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_9pvh')
async def finish_18(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 140 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_9tree')
async def finish_19(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 147 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_9mdf')
async def finish_20(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 145 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 3 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_10org')
async def finish_21(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 127 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_10pvh')
async def finish_22(message: types.Message):
     await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                          caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                  'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                  ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                  '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                  '–¶–µ–Ω–∞: 149 500 —Ä—É–±. —Å –ù–î–°\n'
                                  '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_10tree')
async def finish_23(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 157 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_10mdf')
async def finish_24(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 155 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
##################################################################################################################
# –° –¢–ê–ú–ë–£–†–û–ú  3 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_11org')
async def finish_25(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–¶–µ–Ω–∞: 126 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_11pvh')
async def finish_26(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–¶–µ–Ω–∞: 149 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_11tree')
async def finish_27(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–¶–µ–Ω–∞: 156 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_11mdf')
async def finish_28(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–¶–µ–Ω–∞: 154 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################################################
# –° –¢–ê–ú–ë–£–†–û–ú  3 –†–ê–ó–ú–ï–† –° –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_12org')
async def finish_29(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpgg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–¶–µ–Ω–∞: 136 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')



@dp.callback_query_handler(lambda c: c.data == 'otdelka_12pvh')
async def finish_30(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–¶–µ–Ω–∞: 158 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_12tree')
async def finish_31(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–¶–µ–Ω–∞: 166 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_12mdf')
async def finish_32(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_3/bytovka_043_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 4,0—Ö2,4 –º,\n'
                                 '—Ç—Ä–∏ –æ–∫–Ω–∞ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–¶–µ–Ω–∞: 164 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
#4—Ä–∞–∑–º–µ—Ä
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 4 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_13org')
async def finish_33(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 145 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')



@dp.callback_query_handler(lambda c: c.data == 'otdelka_13pvh')
async def finish_34(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 175 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')



@dp.callback_query_handler(lambda c: c.data == 'otdelka_13tree')
async def finish_35(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 185 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_13mdf')
async def finish_36(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 182 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
##################################################################################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 4 –†–ê–ó–ú–ï–† c –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_14org')
async def finish_37(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 154 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_14pvh')
async def finish_38(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 184 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_14tree')
async def finish_39(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 194 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_14mdf')
async def finish_40(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 191 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
##################################################################################################################
# c –¢–ê–ú–ë–£–†–û–ú 4 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û


@dp.callback_query_handler(lambda c: c.data == 'otdelka_15org')
async def finish_41(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 150 000 —Ä—É–± —Å –ù–î–°./160 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_15pvh')
async def finish_42(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 180 000 —Ä—É–± —Å –ù–î–°./190 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_15tree')
async def finish_43(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 190 000 —Ä—É–± —Å –ù–î–°./200 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_15mdf')
async def finish_44(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 187 000 —Ä—É–± —Å –ù–î–°./197 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

##################################################################################################################
# —Å –¢–ê–ú–ë–£–†–ê 4 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û


@dp.callback_query_handler(lambda c: c.data == 'otdelka_16org')
async def finish_45(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç  ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 159 500 —Ä—É–± —Å –ù–î–°./169 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_16pvh')
async def finish_46(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 189 500 —Ä—É–± —Å –ù–î–°./199 500 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_16tree')
async def finish_47(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 199 500 —Ä—É–± —Å –ù–î–°./209 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_16mdf')
async def finish_48(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_4/bytovka_062_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 196 500 —Ä—É–± —Å –ù–î–°./206 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
#5—Ä–∞–∑–º–µ—Ä
#########################################################

# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û


@dp.callback_query_handler(lambda c: c.data == 'otdelka_17org')
async def finish_49(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 290 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_17pvh')
async def finish_50(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 350 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_17tree')
async def finish_51(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 375 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_17mdf')
async def finish_52(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 375 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† c –ï–õ–ï–ö–¢–†–û
##################################################################################################################

@dp.callback_query_handler(lambda c: c.data == 'otdelka_18org')
async def finish_53(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 299 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_18pvh')
async def finish_54(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 359 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_18tree')
async def finish_55(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 384 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')


@dp.callback_query_handler(lambda c: c.data == 'otdelka_18mdf')
async def finish_56(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 384 500 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
# –° –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
##################################################################################################################

@dp.callback_query_handler(lambda c: c.data == 'otdelka_19org')
async def finish_57(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 295 000 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_19pvh')
async def finish_58(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 355 000 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_19tree')
async def finish_59(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 380 000 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')



@dp.callback_query_handler(lambda c: c.data == 'otdelka_19mdf')
async def finish_60(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 380 000 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
# –° –¢–ê–ú–ë–£–†–ê 5 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û
##################################################################################################################
@dp.callback_query_handler(lambda c: c.data == 'otdelka_20org')
async def finish_57(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –æ—Ä–≥–∞–ª–∏—Ç,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 304 500 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_20pvh')
async def finish_58(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 364 500 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_20tree')
async def finish_59(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 389 500 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_20mdf')
async def finish_60(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_5/bytovka_064_cam002.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 6,0—Ö4,8 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 389 500 —Ä—É–± —Å –ù–î–°.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
#6—Ä–∞–∑–º–µ—Ä
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û


@dp.callback_query_handler(lambda c: c.data == 'otdelka_20pvh')
async def finish_61(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 245 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_20tree')
async def finish_62(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 275 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_20mdf')
async def finish_63(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 270 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_21pvh')
async def finish_64(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 254 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_21tree')
async def finish_65(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 284 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_21mdf')
async def finish_66(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 279 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† –±–µ–∑ –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_22pvh')
async def finish_67(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 250 000 —Ä—É–± —Å –ù–î–°./260 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_22tree')
async def finish_68(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 280 000 —Ä—É–± —Å –ù–î–°./295 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_22mdf')
async def finish_69(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 275 000 —Ä—É–± —Å –ù–î–°./290 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 6 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_23pvh')
async def finish_70(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 259 500 —Ä—É–± —Å –ù–î–°./269 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_23tree')
async def finish_71(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                '–¶–µ–Ω–∞: 289 500 —Ä—É–± —Å –ù–î–°./304 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_23mdf')
async def finish_72(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_6/bytovka_084_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 8,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –º–¥—Ñ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 284 500 —Ä—É–± —Å –ù–î–°./299 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
#7—Ä–∞–∑–º–µ—Ä
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† –ë–ï–ó –ï–õ–ï–ö–¢–†–û
@dp.callback_query_handler(lambda c: c.data == 'otdelka_25pvh')
async def finish_73(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 270 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_25tree')
async def finish_74(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 295 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_25mdf')
async def finish_75(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 290 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# –ë–ï–ó –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_26pvh')
async def finish_76(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 279 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_26tree')
async def finish_77(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 304 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_26mdf')
async def finish_78(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 299 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† –±–µ–∑ –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_27pvh')
async def finish_79(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 275 000 —Ä—É–± —Å –ù–î–°./295 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_27tree')
async def finish_80(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–æ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 300 000 —Ä—É–± —Å –ù–î–°./320 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_27mdf')
async def finish_81(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 295 000 —Ä—É–± —Å –ù–î–°./315 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 7 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_28pvh')
async def finish_82(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 284 500 —Ä—É–± —Å –ù–î–°./304 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_28tree')
async def finish_83(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞:  309 500 —Ä—É–± —Å –ù–î–°./329 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_28mdf')
async def finish_84(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_7/bytovka_092_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 9,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞:  304 500 —Ä—É–± —Å –ù–î–°./ 324 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
#8—Ä–∞–∑–º–µ—Ä
#########################################################
# –±–µ–∑ –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† –±–µ–∑ –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_29pvh')
async def finish_85(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 340 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_29tree')
async def finish_86(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 370 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_29mdf')
async def finish_87(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –º–¥—Ñ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 365 000 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
#########################################################
# –±–µ–∑ –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_30pvh')
async def finish_88(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 349 500  —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_30tree')
async def finish_89(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 379 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_30mdf')
async def finish_90(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '–±–µ–∑ —Ç–∞–º–±—É—Ä–∞,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 374 500 —Ä—É–±. —Å –ù–î–°\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† –±–µ–∑ –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_31pvh')
async def finish_88(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º—è,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 345 000 —Ä—É–± —Å –ù–î–°./360 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_31tree')
async def finish_89(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 '–æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 375 000 —Ä—É–± —Å –ù–î–°./385 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_31mdf')
async def finish_90(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '–±–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –ú–î–§,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 370 000 —Ä—É–± —Å –ù–î–°./380 000 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

#########################################################
# —Å –¢–ê–ú–ë–£–†–ê 8 –†–ê–ó–ú–ï–† —Å –ï–õ–ï–ö–¢–†–û

@dp.callback_query_handler(lambda c: c.data == 'otdelka_32pvh')
async def finish_91(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 'c —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 'c —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –≤–∞–≥–æ–Ω–∫–∞ –ü–í–•,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 354 500 —Ä—É–± —Å –ù–î–°./369 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')
@dp.callback_query_handler(lambda c: c.data == 'otdelka_32tree')
async def finish_92(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞ –¥–µ—Ä–µ–≤–æ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 384 500 —Ä—É–± —Å –ù–î–°./394 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')

@dp.callback_query_handler(lambda c: c.data == 'otdelka_32mdf')
async def finish_93(message: types.Message):
    await bot.send_photo(message.from_user.id, InputFile('photos/razmer_8/bytovka_125_cam001.jpg'),
                         caption='–†–∞–∑–º–µ—Ä: 12,0—Ö2,4 –º,\n'
                                 '—Å —Ç–∞–º–±—É—Ä–æ–º,\n'
                                 '—Å —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–æ–π,\n'
                                 ' –æ—Ç–¥–µ–ª–∫–∞  –º–¥—Ñ,\n'
                                 '–æ–¥–Ω–æ –æ–∫–Ω–æ —Ä–∞–º–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è, —É—Ç–µ–ø–ª–µ–Ω–∏–µ - 50 –º–º.\n'
                                 '–¶–µ–Ω–∞: 379 500 —Ä—É–± —Å –ù–î–°./389 500 —Ä—É–± —Å –ù–î–°-—Ä–∞—Å–ø–∞—à–æ–Ω–∫–∞.\n'
                                 '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –±–ª–æ–∫-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–º: –¥–æ 100 –∫–º. –æ—Ç –ø–ª–æ—â–∞–¥–∫–∏ (–ø. –í–µ—à–∫–∏) = 11 900 —Ä—É–±. —Å–≤—ã—à–µ 100 –∫–º. = 11 900 —Ä—É–±. + 100 —Ä—É–±./–∫–º (—Å–≤—ã—à–µ 100 –∫–º.)')











































# @dp.callback_query_handler(lambda c: c.data == 'otdelka_1org')
# async def callback_handler(callback_query: types.CallbackQuery):
#     data_art = "stroy/2/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ (2)/bytovka_062_cam001.jpg"
#     spriteKeyboard = InlineKeyboardMarkup(row_width=1)
#     photka_org1 = InlineKeyboardButton(text="–¥–∞–ª—å—à–µ‚û°Ô∏è", callback_data="photka_org1")
#     caption = f"98 000—Ä (—Å –Ω–¥—Å)"
#     spriteKeyboard.add(photka_org1)
#     await bot.send_photo(callback_query.from_user.id, photo=types.InputFile(data_art), caption=caption,
#                          parse_mode="Markdown")



# @dp.callback_query_handler(lambda c: c.data == 'metal_bitovka')
# async def vse_stroy(message: types.Message):
#     ikb = InlineKeyboardMarkup(row_width=1)
#     bitovka_1 = InlineKeyboardButton(text="–ë—ã—Ç–æ–≤–∫–∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π 2,40 —Ö 2,40 –ë–ö-02 (–æ—Ö—Ä.) –ü–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã  ", callback_data="bitovka_1")
#     bitovka_2 = InlineKeyboardButton(text="–ë—ã—Ç–æ–≤–∫–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –ë–ö-03 (3 –º.) 3,0 —Ö 2,40", callback_data="bitovka_2")
#     bitovka_3 = InlineKeyboardButton(text="–ë—ã—Ç–æ–≤–∫–∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π 3,0 —Ö 2,40 –ë–ö03 (3–º)", callback_data="bitovka_3")
#     bitovka_4 = InlineKeyboardButton(text="–ë—ã—Ç–æ–≤–∫–∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π 4,0 —Ö 2,40 –ë–ö-03 (4 –º.)", callback_data="bitovka_4")
#     ikb.add(bitovka_1, bitovka_2,bitovka_3 , bitovka_4 )
#     await bot.send_message(message.from_user.id, "—Ç—É—Ç –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç",reply_markup= ikb)
# @dp.callback_query_handler(lambda c: c.data == 'bitovka_1')
# async def callback_handler(callback_query: types.CallbackQuery):
#     data_art = "stroy/2/1/bytovka_024_cam001.jpg"
#     caption = f"82 000—Ä (—Å –Ω–¥—Å)"
#     await bot.send_photo(callback_query.from_user.id, photo=types.InputFile(data_art), caption=caption,
#                          parse_mode="Markdown")
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
@dp.message_handler(lambda message: message.text == "–æ –Ω–∞—Å üîç")
async def catalog(message: types.Message):
    await bot.send_message(message.from_user.id,
                         "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ, –ø—Ä–æ–¥–∞–∂–∞ –∏ –∞—Ä–µ–Ω–¥–∞ –±—ã—Ç–æ–≤–æ–∫ c 1997–≥"
                         '                                                                          '
                         "üè† –ë—ã—Ç–æ–≤–∫–∏ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è"
                         "                                                                          "
                         "üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–≤—Ç—Ä–∞"
                         "                                                                                                    " 
                         "üë©‚Äçüíº–ê—Ä–µ–Ω–¥–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ "
                         "                                                                                                   "
                         "üè™ –í—Å–µ–≥–¥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ "
                         "                                                                                                    "
                         "üìç –ú–æ—Å–∫–≤–∞ –ú–û "
                         "                                                                                                    "
                         "üíµ –°–∫–∏–¥–∫–∞ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç "
                         "                                                                                                   "
                         "üèô –û–ø–ª–∞—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è "
                         "                                                                                                    "
                         "üíØ –ì–∞—Ä–∞–Ω—Ç–∏—è "                         
                         "                                                                                                                             "
                         "‚õîÔ∏è –ë–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤"                         
                         "                                                                                                    ",reply_markup= main_menu)


@dp.message_handler(lambda message: message.text == "–∫–æ–Ω—Ç–∞–∫—Ç—ã üìû")
async def catalog(message: types.Message):
    await bot.send_message(message.from_user.id,"  —Å–∞–π—Ç bitovkin.ru,                                                                                               "
                                                " "
                                                "—Ç–µ–ª.: +7 (495) 780-61-60, +7 (495) 971-49-46, +7 (495) 741-46-63                                                       "
                                                
                                                "–∞–¥—Ä–µ—Å –Ω–∞—à–µ–π —ç–ª.–ø–æ—á—Ç—ã: bitovkin@mail.ru                                                                      "
                                                
                                                "–∞–¥—Ä–µ—Å: –µ"
                                                "–ú–û,–ø–æ—Å–µ–ª–æ–∫ –í–µ—à–∫–∏, —É–ª.–ó–∞–≤–æ–¥—Å–∫–∞—è, –¥–æ–º3–ë                                                                                                                                       ")


try:
        # logger.info(f"\nSTATUS: –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.\n")
    executor.start_polling(dp,skip_updates = True)
except Exception as e:
    # logger.error(f"\nERROR: {e}\n")
    print(e)
